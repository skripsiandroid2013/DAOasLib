package id.ac.itats.skripsi.arga.orm.dao;

import id.ac.itats.skripsi.arga.orm.entity.tb_edge;
import id.ac.itats.skripsi.arga.orm.entity.tb_node;

import java.util.Map;

import android.database.sqlite.SQLiteDatabase;
import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.DaoConfig;
import de.greenrobot.dao.IdentityScopeType;



// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig tb_nodeDaoConfig;
    private final DaoConfig tb_edgeDaoConfig;

    private final tb_nodeDao tb_nodeDao;
    private final tb_edgeDao tb_edgeDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        tb_nodeDaoConfig = daoConfigMap.get(tb_nodeDao.class).clone();
        tb_edgeDaoConfig = daoConfigMap.get(tb_edgeDao.class).clone();
        tb_nodeDaoConfig.initIdentityScope(type);
        tb_edgeDaoConfig.initIdentityScope(type);

        tb_nodeDao = new tb_nodeDao(tb_nodeDaoConfig, this);
        tb_edgeDao = new tb_edgeDao(tb_edgeDaoConfig, this);

        registerDao(tb_node.class, tb_nodeDao);
        registerDao(tb_edge.class, tb_edgeDao);
    }
    
    public void clear() {
        tb_nodeDaoConfig.getIdentityScope().clear();
        tb_edgeDaoConfig.getIdentityScope().clear();
    }

    public tb_nodeDao getTb_nodeDao() {
        return tb_nodeDao;
    }
    public tb_edgeDao getTb_edgeDao() {
        return tb_edgeDao;
    }

}
